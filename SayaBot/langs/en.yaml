# Language name in their native
language: "English üá∫üá≤"
# name of people(s) who worked on this translation
authors: "@dank_as_fuck"

# languages
curr_chat_lang: "Hey. Your current language is {}, select the one you want from the buttons below :)"
set_chat_lang: "Great, {} it is from now on!"


pm_start_text: |
    Hi {}, my name is {}!
    I am an Anime themed group management bot.
    I specialize in managing anime and similar themed groups.
    You can find my list of available commands with /help.

grp_start_text: "I'm awake already!\n<b>Haven't slept since:</b> <code>{}</code>"

donate: |
    Heya, glad to hear you want to donate!
    You can support the project via [Paypal](paypal.me/SuperSuslik312) or by contacting @SuperSuslik312 \
    Supporting isnt always financial!

pm_help_text: |
    Hey there! My name is *{}*.
    Have a look at the following for an idea of some of the things I can help you with.
    *Main* commands available:
    ‚Ä¢ /help: PM's you this message.
    ‚Ä¢ /help <module name>: PM's you info about that module.
    ‚Ä¢ /donate: information on how to donate!
    ‚Ä¢ /settings:
      ‚Ä¢ in PM: will send you your settings for all supported modules.
      ‚Ä¢ in a group: will redirect you to pm, with all that chat's settings.
    {}
    And the following:
add_bot_to_group_btn: "‚òëÔ∏è Add Shichimiya to your group"
support_chat_link_btn: "üöë Support Group"
updates_channel_link_btn: "üîî Updates Channel"
src_btn: "üóÑ Source code"
getting_started: "üßæ Getting started guide"

admin_help: |
    ‚Ä¢ `/admins`*:* list of admins in the chat
    *Admins only:*
    ‚Ä¢ `/pin`*:* silently pins the message replied to - add `'loud'` or `'notify'` to give notifs to users
    ‚Ä¢ `/unpin`*:* unpins the currently pinned message
    ‚Ä¢ `/invitelink`*:* gets invitelink
    ‚Ä¢ `/link`*:* same as invitelink
    ‚Ä¢ `/promote`*:* promotes the user replied to
    ‚Ä¢ `/demote`*:* demotes the user replied to
    ‚Ä¢ `/title <title here>`*:* sets a custom title for an admin that the bot promoted
    ‚Ä¢ `/admincache`*:* force refresh the admins list
    ‚Ä¢ `/zombies`*:* scan and clean zombies
afk_help: |
    ‚Ä¢ `/afk <reason>`*:* mark yourself as AFK(away from keyboard).
    ‚Ä¢ `brb <reason>`*:* same as the afk command - but not a command.
    When marked as AFK, any mentions will be replied to with a message to say you're not available!
anime_help: |
    Get information about anime, manga or characters from [AniList](anilist.co).
    *Available commands:*
    ‚Ä¢ `/anime <anime>`*:* returns information about the anime.
    ‚Ä¢ `/character <character>`*:* returns information about the character.
    ‚Ä¢ `/manga <manga>`*:* returns information about the manga.
    ‚Ä¢ `/user <user>`*:* returns information about a MyAnimeList user.
    ‚Ä¢ `/upcoming`*:* returns a list of new anime in the upcoming seasons.
    ‚Ä¢ `/kaizoku <anime>`*:* search an anime on animekaizoku.com
    ‚Ä¢ `/kayo <anime>`*:* search an anime on animekayo.com
    ‚Ä¢ `/airing <anime>`*:* returns anime airing info.
antiflood_help: |
    Antiflood allows you to take action on users that send more than x messages in a row. Exceeding the set flood \
    will result in restricting that user.
    This will mute users if they send more than 10 messages in a row, bots are ignored.
    ‚Ä¢ `/flood`*:* Get the current flood control setting
    ‚Ä¢ *Admins only:*
    ‚Ä¢ `/setflood <int/'no'/'off'>`*:* enables or disables flood control
    *Example:* `/setflood 10`
    ‚Ä¢ `/setfloodmode <ban/kick/mute/tban/tmute> <value>`*:* Action to perform when user have exceeded flood limit. ban/kick/mute/tmute/tban
    ‚Ä¢ *Note:*
    ‚Ä¢ Value must be filled for tban and tmute!!
    It can be:
    `5m` = 5 minutes
    `6h` = 6 hours
    `3d` = 3 days
    `1w` = 1 week
approve_help: |
    Sometimes, you might trust a user not to send unwanted content.
    Maybe not enough to make them admin, but you might be ok with locks, blacklists, and antiflood not applying to them.

    That's what approvals are for - approve of trustworthy users to allow them to send

    *Admin commands:*
    - `/approval`*:* Check a user's approval status in this chat.
    - `/approve`*:* Approve of a user. Locks, blacklists, and antiflood won't apply to them anymore.
    - `/unapprove`*:* Unapprove of a user. They will now be subject to locks, blacklists, and antiflood again.
    - `/approved`*:* List all approved users.
    - `/unapproveall`*:* Unapprove *ALL* users in a chat. This cannot be undone.
backup_help: |
    *Only for group owner:*

    ‚Ä¢ /import: Reply to the backup file for the butler / emilia group to import as much as possible, making transfers very easy! \
    Note that files / photos cannot be imported due to telegram restrictions.

    ‚Ä¢ /export: Export group data, which will be exported are: rules, notes (documents, images, music, video, audio, voice, text, text buttons) \

bans_help: |
    ‚Ä¢ `/kickme`*:* kicks the user who issued the command
    *Admins only:*
    ‚Ä¢ `/ban <userhandle>`*:* bans a user. (via handle, or reply)
    ‚Ä¢ `/sban <userhandle>`*:* Silently ban a user. Deletes command, Replied message and doesn't reply. (via handle, or reply)
    ‚Ä¢ `/tban <userhandle> x(m/h/d)`*:* bans a user for `x` time. (via handle, or reply). `m` = `minutes`, `h` = `hours`, `d` = `days`.
    ‚Ä¢ `/unban <userhandle>`*:* unbans a user. (via handle, or reply)
    ‚Ä¢ `/kick <userhandle>`*:* Kicks a user out of the group, (via handle, or reply)
blacklist_help: |
    Blacklists are used to stop certain triggers from being said in a group. Any time the trigger is mentioned, the message will immediately be deleted. A good combo is sometimes to pair this up with warn filters!

    *NOTE*: Blacklists do not affect group admins.

    ‚Ä¢ `/blacklist`*:* View the current blacklisted words.

    Admin only:
    ‚Ä¢ `/addblacklist <triggers>`*:* Add a trigger to the blacklist. Each line is considered one trigger, so using different lines will allow you to add multiple triggers.
    ‚Ä¢ `/unblacklist <triggers>`*:* Remove triggers from the blacklist. Same newline logic applies here, so you can remove multiple triggers at once.
    ‚Ä¢ `/blacklistmode <off/del/warn/ban/kick/mute/tban/tmute>`*:* Action to perform when someone sends blacklisted words.
blacklist_stickers_help: |
    Blacklist sticker is used to stop certain stickers. Whenever a sticker is sent, the message will be deleted immediately.
    *NOTE:* Blacklist stickers do not affect the group admin
    ‚Ä¢ `/blsticker`*:* See current blacklisted sticker
    *Only admin:*
    ‚Ä¢ `/addblsticker <sticker link>`*:* Add the sticker trigger to the black list. Can be added via reply sticker
    ‚Ä¢ `/unblsticker <sticker link>`*:* Remove triggers from blacklist. The same newline logic applies here, so you can delete multiple triggers at once
    ‚Ä¢ `/rmblsticker <sticker link>`*:* Same as above
    ‚Ä¢ `/blstickermode <ban/tban/mute/tmute>`*:* sets up a default action on what to do if users use blacklisted stickers
    Note:
    ‚Ä¢ `<sticker link>` can be `https://t.me/addstickers/<sticker>` or just `<sticker>` or reply to the sticker message
chatbot_help: |
    Chatbot utilizes the CoffeeHouse API and allows Saitama to talk and provides a more interactive group chat experience.

    *Commands:*
    *Admins only:*
    ‚Ä¢ `/addchat`*:* Enables Chatbot mode in the chat.
    ‚Ä¢ `/rmchat`*:* Disables Chatbot mode in the chat.

    Reports bugs at @{SUPPORT_CHAT}
    *Powered by CoffeeHouse* (https://coffeehouse.intellivoid.net/) from @Intellivoid
cleaner_help: |
    Blue text cleaner removed any made up commands that people send in your chat.
    ‚Ä¢ `/cleanblue <on/off/yes/no>`*:* clean commands after sending
    ‚Ä¢ `/ignoreblue <word>`*:* prevent auto cleaning of the command
    ‚Ä¢ `/unignoreblue <word>`*:* remove prevent auto cleaning of the command
    ‚Ä¢ `/listblue`*:* list currently whitelisted commands

    *Following are Solar Union only commands, admins cannot use these:*
    ‚Ä¢ `/gignoreblue <word>`*:* globally ignorea bluetext cleaning of saved word across Saitama.
    ‚Ä¢ `/ungignoreblue <word>`*:* remove said command from global cleaning list
connections_help: |
    Sometimes, you just want to add some notes and filters to a group chat, but you don't want everyone to see; This is where connections come in...
    This allows you to connect to a chat's database, and add things to it without the commands appearing in chat! For obvious reasons, you need to be an admin to add things; but any member in the group can view your data.

    ‚Ä¢ /connect: Connects to chat (Can be done in a group by /connect or /connect <chat id> in PM)
    ‚Ä¢ /connection: List connected chats
    ‚Ä¢ /disconnect: Disconnect from a chat
    ‚Ä¢ /helpconnect: List available commands that can be used remotely

    *Admin only:*
    ‚Ä¢ /allowconnect <yes/no>: allow a user to connect to a chat
cust_filters_help: |
    ‚Ä¢ `/filters`*:* List all active filters saved in the chat.

    *Admin only:*
    ‚Ä¢ `/filter <keyword> <reply message>`*:* Add a filter to this chat. The bot will now reply that message whenever 'keyword'\
    is mentioned. If you reply to a sticker with a keyword, the bot will reply with that sticker. NOTE: all filter \
    keywords are in lowercase. If you want your keyword to be a sentence, use quotes. eg: /filter "hey there" How you \
    doin?
    Separate diff replies by `%%%` to get random replies
    *Example:*
    `/filter "filtername"
    Reply 1
    %%%
    Reply 2
    %%%
    Reply 3`
    ‚Ä¢ `/stop <filter keyword>`*:* Stop that filter.

    *Chat creator only:*
    ‚Ä¢ `/removeallfilters`*:* Remove all chat filters at once.

    *Note*: Filters also support markdown formatters like: {first}, {last} etc.. and buttons.
    Check `/markdownhelp` to know more!

disable_help: |
    ‚Ä¢ `/cmds`*:* check the current status of disabled commands

    *Admins only:*
    ‚Ä¢ `/enable <cmd name>`*:* enable that command
    ‚Ä¢ `/disable <cmd name>`*:* disable that command
    ‚Ä¢ `/enablemodule <module name>`*:* enable all commands in that module
    ‚Ä¢ `/disablemodule <module name>`*:* disable all commands in that module
    ‚Ä¢ `/listcmds`*:* list all possible toggleable commands
feds_help: |
    Everything is fun, until a spammer starts entering your group, and you have to block it. Then you need to start banning more, and more, and it hurts.
    But then you have many groups, and you don't want this spammer to be in one of your groups - how can you deal? Do you have to manually block it, in all your groups?\n
    *No longer!* With Federation, you can make a ban in one chat overlap with all other chats.\n
    You can even designate federation admins, so your trusted admin can ban all the spammers from chats you want to protect.\n

    *Commands:*\n
    Feds are now divided into 3 sections for your ease.
    ‚Ä¢ `/fedownerhelp`*:* Provides help for fed creation and owner only commands
    ‚Ä¢ `/fedadminhelp`*:* Provides help for fed administration commands
    ‚Ä¢ `/feduserhelp`*:* Provides help for commands anyone can use
FED_OWNER_HELP: | 
    *üëë Fed Owner Only:*
    ‚Ä¢ `/newfed <fed_name>`*:* Creates a Federation, One allowed per user
    ‚Ä¢ `/renamefed <fed_id> <new_fed_name>`*:* Renames the fed id to a new name
    ‚Ä¢ `/delfed <fed_id>`*:* Delete a Federation, and any information related to it. Will not cancel blocked users
    ‚Ä¢ `/fpromote <user>`*:* Assigns the user as a federation admin. Enables all commands for the user under `Fed Admins`
    ‚Ä¢ `/fdemote <user>`*:* Drops the User from the admin Federation to a normal User
    ‚Ä¢ `/subfed <fed_id>`*:* Subscribes to a given fed ID, bans from that subscribed fed will also happen in your fed
    ‚Ä¢ `/unsubfed <fed_id>`*:* Unsubscribes to a given fed ID
    ‚Ä¢ `/setfedlog <fed_id>`*:* Sets the group as a fed log report base for the federation
    ‚Ä¢ `/unsetfedlog <fed_id>`*:* Removed the group as a fed log report base for the federation
    ‚Ä¢ `/fbroadcast <message>`*:* Broadcasts a messages to all groups that have joined your fed
    ‚Ä¢ `/fedsubs`*:* Shows the feds your group is subscribed to `(broken rn)`
FED_ADMIN_HELP: |
    *üî± Fed Admins:*
    ‚Ä¢ `/fban <user> <reason>`*:* Fed bans a user
    ‚Ä¢ `/unfban <user> <reason>`*:* Removes a user from a fed ban
    ‚Ä¢ `/fedinfo <fed_id>`*:* Information about the specified Federation
    ‚Ä¢ `/joinfed <fed_id>`*:* Join the current chat to the Federation. Only chat owners can do this. Every chat can only be in one Federation
    ‚Ä¢ `/leavefed <fed_id>`*:* Leave the Federation given. Only chat owners can do this
    ‚Ä¢ `/setfrules <rules>`*:* Arrange Federation rules
    ‚Ä¢ `/fedadmins`*:* Show Federation admin
    ‚Ä¢ `/fbanlist`*:* Displays all users who are victimized at the Federation at this time
    ‚Ä¢ `/fedchats`*:* Get all the chats that are connected in the Federation
    ‚Ä¢ `/chatfed `*:* See the Federation in the current chat\n
FED_USER_HELP: | 
    *üé© Any user:*
    ‚Ä¢ `/fbanstat`*:* Shows if you/or the user you are replying to or their username is fbanned somewhere or not
    ‚Ä¢ `/fednotif <on/off>`*:* Federation settings not in PM when there are users who are fbaned/unfbanned
    ‚Ä¢ `/frules`*:* See Federation regulations\n
gettime_help: |
    ‚Ä¢ `/time <query>`*:* Gives information about a timezone.

    *Available queries:* Country Code/Country Name/Timezone Name
    ‚Ä¢ üïê [Timezones list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones)
gban_help: |
    *Admins only:*
    ‚Ä¢ `/antispam <on/off/yes/no>`*:* Will toggle our antispam tech or return your current settings.

    Anti-Spam, used by bot devs to ban spammers across all groups. This helps protect \
    you and your groups by removing spam flooders as quickly as possible.
    *Note:* Users can appeal gbans or report spammers at @{SUPPORT_CHAT}

    This also integrates @Spamwatch API to remove Spammers as much as possible from your chatroom!
    *What is SpamWatch?*
    SpamWatch maintains a large constantly updated ban-list of spambots, trolls, bitcoin spammers and unsavoury characters[.](https://telegra.ph/file/f584b643c6f4be0b1de53.jpg)
    Constantly help banning spammers off from your group automatically So, you wont have to worry about spammers storming your group.
    *Note:* Users can appeal spamwatch bans at @SpamwatchSupport
media_help: |
    *Available commands:*\n
    *Movie information:*
    ‚Ä¢ `/imdb <movie name>`: does a movie search in Imdb site\n
    *Lyrics:*
    ‚Ä¢ `/lyrics <song name>`: does a lyric search for a given song name\n
    *Image reverse:*
    ‚Ä¢ `/reverse`: does a *reverse image search* of the media which it was replied to\n
    *Text to speech:*
    ‚Ä¢ `/tts <text>`: convert text to speech\n
    *Youtube:*
    ‚Ä¢ `/youtube`, `/yt` `<song or video name>`: download songs or videos from youtube in standar quality
sed_help: |
    ‚Ä¢ `s/<text1>/<text2>(/<flag>)`*:* Reply to a message with this to perform a sed operation on that message, replacing all \
    occurrences of 'text1' with 'text2'. Flags are optional, and currently include 'i' for ignore case, 'g' for global, \
    or nothing. Delimiters include `/`, `_`, `|`, and `:`. Text grouping is supported. The resulting message cannot be \
    larger than {}.
    *Reminder:* Sed uses some special characters to make matching easier, such as these: `+*.?\\`
    If you want to use these characters, make sure you escape them!
    *Example:* \\?.
stickers_help: |
    ‚Ä¢ `/stickerid`*:* reply to a sticker to me to tell you its file ID.
    ‚Ä¢ `/getsticker`*:* reply to a sticker to me to upload its raw PNG file.
    ‚Ä¢ `/kang`*:* reply to a sticker to add it to your pack.
    ‚Ä¢ `/stickers`*:* Find stickers for given term on combot sticker catalogue
unions_help: |
    *‚ö†Ô∏è Notice:*
    Commands listed here only work for users with special access are mainly used for troubleshooting, debugging purposes.
    Group admins/group owners do not need these commands.

    ‚ïî *List all special users:*
    ‚ï† `/Venus`*:* Lists all Venus Solar Union members
    ‚ï† `/Earth`*:* Lists all Earth Solar Union members
    ‚ï† `/Mars`*:* Lists all Mars Solar Union members
    ‚ï† `/Jupiter`*:* Lists all Jupiter Solar Union members
    ‚ï† `/Mercury`*:* Lists all Mercury Solar Union members
    ‚ï† `/addvenus`*:* Adds a user to Venus Solar Union
    ‚ï† `/addearth`*:* Adds a user to Earth Solar Union
    ‚ï† `/addmars`*:* Adds a user to Mars Solar Union
    ‚ï† `/addwhitelist`*:* Adds a user to Jupiter Solar Union
    ‚ïö `Add Mercury doesnt exist, devs should know how to add themselves`

    ‚ïî *Ping:*
    ‚ï† `/ping`*:* gets ping time of bot to telegram server
    ‚ïö `/pingall`*:* gets all listed ping times

    ‚ïî *Broadcast: (Bot owner only)*
    ‚ï†  *Note:* This supports basic markdown
    ‚ï† `/broadcastall`*:* Broadcasts everywhere
    ‚ï† `/broadcast`*:* Broadcasts too all users
    ‚ïö `/broadcastgroups`*:* Broadcasts too all groups

    ‚ïî *Groups Info:*
    ‚ï† `/chatlist`*:* List the groups with Name, ID, members count as a txt
    ‚ï† `/leave <ID>`*:* Leave the group, ID must have hyphen
    ‚ï† `/stats`*:* Shows overall bot stats
    ‚ï† `/getchats`*:* Gets a list of group names the user has been seen in. Bot owner only
    ‚ïö `/ginfo username/link/ID`*:* Pulls info panel for entire group

    ‚ïî *Access control:*
    ‚ï† `/ignore`*:* Blacklists a user from
    ‚ï†  using the bot entirely
    ‚ï† `/lockdown <off/on>`*:* Toggles bot adding to groups
    ‚ï† `/notice`*:* Removes user from blacklist
    ‚ïö `/ignoredlist`*:* Lists ignored users

    ‚ïî *Module loading:*
    ‚ï† `/listmodules`*:* Prints modules and their names
    ‚ï† `/unload <name>`*:* Unloads module dynamically
    ‚ïö `/load <name>`*:* Loads module

    ‚ïî *Speedtest:*
    ‚ïö `/speedtest`*:* Runs a speedtest and gives you 2 options to choose from, text or image output

    ‚ïî *Global Bans:*
    ‚ï† `/gban user reason`*:* Globally bans a user
    ‚ïö `/ungban user reason`*:* Unbans the user from the global bans list

    ‚ïî *Module loading:*
    ‚ï† `/listmodules`*:* Lists names of all modules
    ‚ï† `/load modulename`*:* Loads the said module to
    ‚ï†   memory without restarting.
    ‚ï† `/unload modulename`*:* Loads the said module from
    ‚ïö   memory without restarting.memory without restarting the bot

    ‚ïî *Remote commands:*
    ‚ï† `/rban user group`*:* Remote ban
    ‚ï† `/runban user group`*:* Remote un-ban
    ‚ï† `/rpunch user group`*:* Remote punch
    ‚ï† `/rmute user group`*:* Remote mute
    ‚ïö `/runmute user group`*:* Remote un-mute

    ‚ïî *Windows self hosted only:*
    ‚ï† `/reboot`*:* Restarts the bots service
    ‚ïö `/gitpull`*:* Pulls the repo and then restarts the bots service

    ‚ïî *Chatbot:*
    ‚ïö `/listaichats`*:* Lists the chats the chatmode is enabled in

    ‚ïî *Debugging and Shell:*
    ‚ï† `/debug <on/off>`*:* Logs commands to updates.txt
    ‚ï† `/logs`*:* Run this in support group to get logs in pm
    ‚ï† `/eval`*:* Self explanatory
    ‚ï† `/sh`*:* Runs shell command
    ‚ï† `/shell`*:* Runs shell command
    ‚ï† `/clearlocals`*:* As the name goes
    ‚ï† `/dbcleanup`*:* Removes deleted accs and groups from db
    ‚ïö `/py`*:* Runs python code

    ‚ïî *Global Bans:*
    ‚ï† `/gban <id> <reason>`*:* Gbans the user, works by reply too
    ‚ï† `/ungban`*:* Ungbans the user, same usage as gban
    ‚ïö `/gbanlist`*:* Outputs a list of gbanned users

    Visit @{SUPPORT_CHAT} for more information.
formt_help_bse: |
    Kigyo supports a large number of formatting options to make your messages more expressive. Take a look!
md_help: |
    <b>Markdown Formatting</b>
    You can format your message using *bold*, _italics_, -underline-, and much more. Go ahead and experiment!
    <b>Supported markdown</b>:
    - <code>`code words`</code>: Backticks are used for monospace fonts. Shows as: <code>code words</code>.
    - <code>_italic words_</code>: Underscores are used for italic fonts. Shows as: <i>italic words</i>.
    - <code>*bold words*</code>: Asterisks are used for bold fonts. Shows as: <b>bold words</b>.
    - <code>~strikethrough~</code>: Tildes are used for strikethrough. Shows as: <strike>strikethrough</strike>.
    - <code>[hyperlink](example.com)</code>: This is the formatting used for hyperlinks. Shows as: <a href="https://example.com/">hyperlink</a>.
    - <code>[My Button](buttonurl://example.com)</code>: This is the formatting used for creating buttons. This example will create a button named "My button" which opens <code>example.com</code> when clicked.
    If you would like to send buttons on the same row, use the <code>:same</code> formatting.
    <b>Example:</b>
    <code>[button 1](buttonurl://example.com)</code>
    <code>[button 2](buttonurl://example.com:same)</code>
    <code>[button 3](buttonurl://example.com)</code>
    This will show button 1 and 2 on the same line, with 3 underneath.
filling_help: |
    <b>Fillings</b>
    You can also customise the contents of your message with contextual data. For example, you could mention a user by name in the welcome message, or mention them in a filter!
    You can use these to mention a user in notes too!
    <b>Supported fillings:</b>
    - <code>{first}</code>: The user's first name.
    - <code>{last}</code>: The user's last name.
    - <code>{fullname}</code>: The user's full name.
    - <code>{username}</code>: The user's username. If they don't have one, mentions the user instead.
    - <code>{mention}</code>: Mentions the user with their firstname.
    - <code>{id}</code>: The user's ID.
    - <code>{chatname}</code>: The chat's name.
fun_help: |
    ‚Ä¢ `/runs`*:* reply a random string from an array of replies
    ‚Ä¢ `/slap`*:* slap a user, or get slapped if not a reply
    ‚Ä¢ `/shrug`*:* get shrug XD
    ‚Ä¢ `/table`*:* get flip/unflip :v
    ‚Ä¢ `/decide`*:* Randomly answers yes/no/maybe
    ‚Ä¢ `/toss`*:* Tosses A coin
    ‚Ä¢ `/bluetext`*:* check urself :V
    ‚Ä¢ `/roll`*:* Roll a dice
    ‚Ä¢ `/rlg`*:* Join ears,nose,mouth and create an emo ;-;
    ‚Ä¢ `/shout <keyword>`*:* write anything you want to give loud shout
    ‚Ä¢ `/weebify <text>`*:* returns a weebified text
    ‚Ä¢ `/sanitize`*:* always use this before /pat or any contact
    ‚Ä¢ `/pat`*:* pats a user, or get patted
    ‚Ä¢ `/8ball`*:* predicts using 8ball method
antispam_help: |
    *Admins only:*
    ‚Ä¢ `/antispam <on/off/yes/no>`*:* Will toggle our antispam tech or return your current settings.
    Anti-Spam, used by bot devs to ban spammers across all groups. This helps protect
    you and your groups by removing spam flooders as quickly as possible.
    *Note:* Users can appeal gbans or report spammers at @YorkTownEagleUnion
    Kigyo also integrates @Spamwatch and @Intellivoid's SpamProtectionBot API to remove Spammers as much as possible from your chatroom!
    *What is SpamWatch?*
    SpamWatch maintains a large constantly updated ban-list of spambots, trolls, bitcoin spammers and unsavoury characters.
    Constantly help banning spammers off from your group automatically So, you wont have to worry about spammers storming your group.
    *Note:* Users can appeal spamwatch bans at @SpamwatchSupport
    *What is Spam protection?*
    SpamProtection is the new AI antispam service which makes sure that your chat is free of spambots, scammers, and pedophiles.
    Uses @Intellivoid's Coffeehouse Artificial Engine. Every ban is checked by real trusty people before being finalized.
gtranslate_help: |
    Translate some text by give a text or reply that text/caption.
    Translate by Google Translate
    `/tr (lang) (""text)`
    Give a target language and text as args for translate to that target.
    Reply a message to translate that.
    "" = Not used when replied to a message.
locks_help: |
    Do stickers annoy you? or want to avoid people sharing links? or pictures? \
    You're in the right place!
    The locks module allows you to lock away some common items in the \
    telegram world; the bot will automatically delete them!

    ‚Ä¢ `/locktypes`*:* Lists all possible locktypes

    *Admins only:*
    ‚Ä¢ `/lock <type>`*:* Lock items of a certain type (not available in private)
    ‚Ä¢ `/unlock <type>`*:* Unlock items of a certain type (not available in private)
    ‚Ä¢ `/locks`*:* The current list of locks in this chat.

    Locks can be used to restrict a group's users.
    eg:
    Locking urls will auto-delete all messages with urls, locking stickers will restrict all \
    non-admin users from sending stickers, etc.
    Locking bots will stop non-admins from adding bots to the chat.

    *Note:*
    ‚Ä¢ Unlocking permission *info* will allow members (non-admins) to change the group information, such as the description or the group name
    ‚Ä¢ Unlocking permission *pin* will allow members (non-admins) to pinned a message in a group
log_help: |
    *Admins only:*
    ‚Ä¢ `/logchannel`*:* get log channel info
    ‚Ä¢ `/setlog`*:* set the log channel.
    ‚Ä¢ `/unsetlog`*:* unset the log channel.

    Setting the log channel is done by:
    ‚Ä¢ adding the bot to the desired channel (as an admin!)
    ‚Ä¢ sending `/setlog` in the channel
    ‚Ä¢ forwarding the `/setlog` to the group
markdown_help_text: |
    Markdown is a very powerful formatting tool supported by telegram. {dispatcher.bot.first_name} has some enhancements, to make sure that \
    saved messages are correctly parsed, and to allow you to create buttons.

    ‚Ä¢ <code>_italic_</code>: wrapping text with '_' will produce italic text
    ‚Ä¢ <code>*bold*</code>: wrapping text with '*' will produce bold text
    ‚Ä¢ <code>`code`</code>: wrapping text with '`' will produce monospaced text, also known as 'code'
    ‚Ä¢ <code>[sometext](someURL)</code>: this will create a link - the message will just show <code>sometext</code>, \
    and tapping on it will open the page at <code>someURL</code>.
    <b>Example:</b><code>[test](example.com)</code>

    ‚Ä¢ <code>[buttontext](buttonurl:someURL)</code>: this is a special enhancement to allow users to have telegram \
    buttons in their markdown. <code>buttontext</code> will be what is displayed on the button, and <code>someurl</code> \
    will be the url which is opened.
    <b>Example:</b> <code>[This is a button](buttonurl:example.com)</code>

    If you want multiple buttons on the same line, use :same, as such:
    <code>[one](buttonurl://example.com)
    [two](buttonurl://google.com:same)</code>
    This will create two buttons on a single line, instead of one button per line.

    Keep in mind that your message <b>MUST</b> contain some text other than just a button!
misc_help: |
    *Available commands:*
    *Markdown:*
    ‚Ä¢ `/markdownhelp`*:* quick summary of how markdown works in telegram - can only be called in private chats
    *Paste:*
    ‚Ä¢ `/paste`*:* Saves replied content to `nekobin.com` and replies with a url
    *React:*
    ‚Ä¢ `/react`*:* Reacts with a random reaction
    *Urban Dictonary:*
    ‚Ä¢ `/ud <word>`*:* Type the word or expression you want to search use
    *Wikipedia:*
    ‚Ä¢ `/wiki <query>`*:* wikipedia your query
    *Wallpapers:*
    ‚Ä¢ `/wall <query>`*:* get a wallpaper from wall.alphacoders.com
    *Currency converter:*
    ‚Ä¢ `/cash`*:* currency converter
    Example:
    `/cash 1 USD INR`
      _OR_
    `/cash 1 usd inr`
    Output: `1.0 USD = 75.505 INR`
muting_help: |
    *Admins only:*
    ‚Ä¢ `/mute <userhandle>`*:* silences a user. Can also be used as a reply, muting the replied to user.
    ‚Ä¢ `/tmute <userhandle> x(m/h/d)`*:* mutes a user for x time. (via handle, or reply). `m` = `minutes`, `h` = `hours`, `d` = `days`.
    ‚Ä¢ `/unmute <userhandle>`*:* unmutes a user. Can also be used as a reply, muting the replied to user.
notes_help: |
    `/get <notename>`*:* get the note with this notename
    `#<notename>`*:* same as /get
    `/notes` or `/saved`*:* list all saved notes in this chat
    `/number` *:* Will pull the note of that number in the list
    If you would like to retrieve the contents of a note without any formatting, use `/get <notename> noformat`. This can \
    be useful when updating a current note

    *Admins only:*
    `/save <notename> <notedata>`*:* saves notedata as a note with name notename
    A button can be added to a note by using standard markdown link syntax - the link should just be prepended with a \
    `buttonurl:` section, as such: `[somelink](buttonurl:example.com)`. Check `/markdownhelp` for more info
    `/save <notename>`*:* save the replied message as a note with name notename
    Separate diff replies by `%%%` to get random notes
    *Example:*
    `/save notename
    Reply 1
    %%%
    Reply 2
    %%%
    Reply 3`
    `/clear <notename>`*:* clear note with this name
    `/removeallnotes`*:* removes all notes from the group
    *Note:* Note names are case-insensitive, and they are automatically converted to lowercase before getting saved.

purge_help: |
    *Admin only:*
    - /del: deletes the message you replied to
    - /purge: deletes all messages between this and the replied to message.
    - /purge <integer X>: deletes the replied message, and X messages following it if replied to a message.
reports_help: |
    ‚Ä¢ `/report <reason>`*:* reply to a message to report it to admins.
    ‚Ä¢ `@admin`*:* reply to a message to report it to admins.
    *NOTE:* Neither of these will get triggered if used by admins.

    *Admins only:*
    ‚Ä¢ `/reports <on/off>`*:* change report setting, or view current status.
    ‚Ä¢ If done in pm, toggles your status.
    ‚Ä¢ If in group, toggles that groups's status.
rules_help: |
    ‚Ä¢ `/rules`*:* get the rules for this chat.

    *Admins only:*
    ‚Ä¢ `/setrules <your rules here>`*:* set the rules for this chat.
    ‚Ä¢ `/clearrules`*:* clear the rules for this chat.
userinfo_help: |
    *ID:*
    ‚Ä¢ `/id`*:* get the current group id. If used by replying to a message, gets that user's id.
    ‚Ä¢ `/gifid`*:* reply to a gif to me to tell you its file ID.

    *Self addded information:*
    ‚Ä¢ `/setme <text>`*:* will set your info
    ‚Ä¢ `/me`*:* will get your or another user's info.
    Examples:
    `/setme I am a wolf.`
    `/me @username(defaults to yours if no user specified)`

    *Information others add on you:*
    ‚Ä¢ `/bio`*:* will get your or another user's bio. This cannot be set by yourself.
    ‚Ä¢ `/setbio <text>`*:* while replying, will save another user's bio
    Examples:
    `/bio @username(defaults to yours if not specified).`
    `/setbio This user is a wolf` (reply to the user)

    *Overall Information about you:*
    ‚Ä¢ `/info`*:* get information about a user.
    *Guide to the General Data Protection Regulation (GDPR):*
    ‚Ä¢ `/gdpr`*:* deletes your information from the bot's database. Private chats only.
    *What is that health thingy?*
    Come and see [HP System explained](https://t.me/SayaBotSupport/565)
warns_help: |
    ‚Ä¢ `/warns <userhandle>`*:* get a user's number, and reason, of warns.
    ‚Ä¢ `/warnlist`*:* list of all current warning filters
    *Admins only:*
    ‚Ä¢ `/warn <userhandle>`*:* warn a user. After 3 warns, the user will be banned from the group. Can also be used as a reply.
    ‚Ä¢ `/dwarn <userhandle>`*:* warn a user and delete the message. After 3 warns, the user will be banned from the group. Can also be used as a reply.
    ‚Ä¢ `/resetwarn <userhandle>`*:* reset the warns for a user. Can also be used as a reply.
    ‚Ä¢ `/addwarn <keyword> <reply message>`*:* set a warning filter on a certain keyword. If you want your keyword to \
    be a sentence, encompass it with quotes, as such: `/addwarn "very angry" This is an angry user`.
    ‚Ä¢ `/nowarn <keyword>`*:* stop a warning filter
    ‚Ä¢ `/warnlimit <num>`*:* set the warning limit
    ‚Ä¢ `/strongwarn <on/yes/off/no>`*:* If set to on, exceeding the warn limit will result in a ban. Else, will just kick.
greetings_help: |
    *Admins only:*
    ‚Ä¢ `/welcome <on/off>`*:* enable/disable welcome messages.
    ‚Ä¢ `/welcome`*:* shows current welcome settings.
    ‚Ä¢ `/welcome noformat`*:* shows current welcome settings, without the formatting - useful to recycle your welcome messages!
    ‚Ä¢ `/goodbye`*:* same usage and args as `/welcome`.
    ‚Ä¢ `/setwelcome <sometext>`*:* set a custom welcome message. If used replying to media, uses that media.
    ‚Ä¢ `/setgoodbye <sometext>`*:* set a custom goodbye message. If used replying to media, uses that media.
    ‚Ä¢ `/resetwelcome`*:* reset to the default welcome message.
    ‚Ä¢ `/resetgoodbye`*:* reset to the default goodbye message.
    ‚Ä¢ `/cleanwelcome <on/off>`*:* On new member, try to delete the previous welcome message to avoid spamming the chat.
    ‚Ä¢ `/welcomemutehelp`*:* gives information about welcome mutes.
    ‚Ä¢ `/cleanservice <on/off>`*:* deletes telegrams welcome/left service messages.
    ‚Ä¢ `/setdefense <on/off/true/false>`*:* Turns on defense mode, will kick any new user automatically.
    ‚Ä¢ `/defense`*:* gets the current defense setting
    *Example:*
    user joined chat, user left chat.
    *Welcome markdown:*
    ‚Ä¢ `/welcomehelp`*:* view more formatting information for custom welcome/goodbye messages.
nation_help: |
    - /eagle - Lists all Eagle Union members.
    - /royals - Lists all Royal Nations.
    - /sakuras - Lists all Sakura Nations.
    - /sardegnas - Lists all Sardegnas Nations.
    - /neptunians - Lists all Neptunia Nations.
    Note: These commands list users with special bot priveleges and can only be used by them.
    You can visit @YorktownEagleUnion to query more about these.
nlp_help: |
    *Chatroom Spam Prediction*
    This feature uses @Intellivoid's Coffeehouse AI to
    process chat messages and detect spam.
    This comes under Coffehouse' NLP. Learn more about
    it [here](https://docs.intellivoid.net/coffeehouse/v1/nlp/spam_prediction/chatroom)
    *Command:*
    ‚Ä¢ `/nlpstat <on/off/yes/no>`*:* toggle NLP in your chat.
